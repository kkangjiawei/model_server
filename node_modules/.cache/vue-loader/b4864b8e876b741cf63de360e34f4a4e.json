{"remainingRequest":"/Users/a1/Desktop/code/golang/src/vue-element-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/a1/Desktop/code/golang/src/vue-element-admin/src/views/model/mode-detail.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/a1/Desktop/code/golang/src/vue-element-admin/src/views/model/mode-detail.vue","mtime":1677438542808},{"path":"/Users/a1/Desktop/code/golang/src/vue-element-admin/node_modules/cache-loader/dist/cjs.js","mtime":1677293886981},{"path":"/Users/a1/Desktop/code/golang/src/vue-element-admin/node_modules/babel-loader/lib/index.js","mtime":1677293894163},{"path":"/Users/a1/Desktop/code/golang/src/vue-element-admin/node_modules/cache-loader/dist/cjs.js","mtime":1677293886981},{"path":"/Users/a1/Desktop/code/golang/src/vue-element-admin/node_modules/vue-loader/lib/index.js","mtime":1677293892832}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmNvbnN0IGpzb25EYXRhID0gJ1t7Iml0ZW1zIjpbeyJtYXJrZXRfdHlwZSI6ImZvcmV4ZGF0YSIsInN5bWJvbCI6Ik5HQVMifV0sIm5hbWUiOiLog73mupDljJblt6UifV0nCmltcG9ydCBKc29uRWRpdG9yIGZyb20gJ0AvY29tcG9uZW50cy9Kc29uRWRpdG9yJwppbXBvcnQgUHl0aG9uRWRpdG9yIGZyb20gJ0AvY29tcG9uZW50cy9QeXRob25FZGl0b3InCmltcG9ydCB7IGdldE1vZGVsRGV0YWlsLCBwcmVkaWN0IH0gZnJvbSAnQC9hcGkvbW9kZWxfZGV0YWlsJwppbXBvcnQgJCBmcm9tICdAL3V0aWxzL2pxdWVyeScKcmVxdWlyZSgnQC91dGlscy8zRG1vbC1taW4nKQoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdNb2RlRGV0YWlsJywKICBjb21wb25lbnRzOiB7IEpzb25FZGl0b3IsIFB5dGhvbkVkaXRvciB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBtb2RlbE5hbWU6ICcnLAogICAgICB2YWx1ZTogSlNPTi5wYXJzZShqc29uRGF0YSksCiAgICAgIHJlc3VsdDogJycsCiAgICAgIGNvZGVFeG1wbGU6ICcnLAogICAgICByZXN1bHRUeXBlOiAwLAogICAgICBwcm90X3NlcTogJycsCiAgICAgIHBlcF9zZXE6ICcnLAogICAgICBtb2RlbERldGFpbDogewogICAgICB9CiAgICB9CiAgfSwKICBjcmVhdGVkKCkgewogICAgdmFyIG1vZGVsTmFtZSA9IHRoaXMuJHJvdXRlLnF1ZXJ5Lm1vZGVsTmFtZQogICAgdGhpcy5tb2RlbE5hbWUgPSBtb2RlbE5hbWUKICAgIGdldE1vZGVsRGV0YWlsKG1vZGVsTmFtZSkudGhlbihyZXNwID0+IHsKICAgICAgY29uc29sZS5sb2cocmVzcCkKICAgICAgdGhpcy5tb2RlbERldGFpbCA9IHJlc3AuZGF0YQogICAgICAvLyB0aGlzLm1vZGVsRGV0YWlsLmRhdGFzZXQ9ICdodHRwOi8vMTIwLjUzLjcuNTQ6NTA2NS8nICsgdGhpcy5tb2RlbERldGFpbC5kYXRhc2V0CiAgICAgIHRoaXMubW9kZWxEZXRhaWwuZGF0YXNldCA9ICdodHRwOi8vMTIwLjUzLjcuNTQ6NTA2NS8nICsgJ3Y2X1NNSUxFU19hZmZpbml0eS56aXAnCiAgICAgIHRoaXMubW9kZWxEZXRhaWwuYXJjaF9pbWcgPSByZXF1aXJlKCcuLi8uLi9hc3NldHMvbW9kZWxzX2ltZy8nICsgdGhpcy5tb2RlbERldGFpbC5hcmNoX2ltZykKICAgICAgaWYgKHRoaXMubW9kZWxEZXRhaWwuaW5mX2NvZGUubGVuZ3RoIDw9IDApIHsKICAgICAgICB0aGlzLm1vZGVsRGV0YWlsLmluZl9jb2RlID0gJ2ltcG9ydCcKICAgICAgfQogICAgICB0aGlzLmNvZGVFeG1wbGUgPSB0aGlzLm1vZGVsRGV0YWlsLmluZl9jb2RlCiAgICAgIHRoaXMuJHJlZnMucHl0aG9uRWRpdG9yLnJlZnJlc2hQeXRob25FZGl0b3IodGhpcy5jb2RlRXhtcGxlKQogICAgICB0aGlzLnZhbHVlID0gSlNPTi5wYXJzZSh0aGlzLm1vZGVsRGV0YWlsLmluZl9mcm9udCkKICAgIH0pLmNhdGNoKGVyciA9PiB7CiAgICAgIGNvbnNvbGUubG9nKGVycikKICAgIH0pCiAgfSwKICBtZXRob2RzOiB7CiAgICByZWFzb25pbmdNb2RlbCgpIHsKICAgICAgY29uc29sZS5sb2coJ3RoaXMudmFsdWUgPSAnICsgdGhpcy52YWx1ZSkKICAgICAgdmFyIGRhdGEgPSBKU09OLnN0cmluZ2lmeSh0aGlzLnZhbHVlKQogICAgICBwcmVkaWN0KHRoaXMubW9kZWxOYW1lLCBkYXRhKS50aGVuKHJlc3AgPT4gewogICAgICAgIGlmIChyZXNwLmRhdGEuZGF0YV90eXBlID09PSAncGRiJykgewogICAgICAgICAgdGhpcy5yZXN1bHRUeXBlID0gMAogICAgICAgICAgY29uc3QgZWxlbWVudCA9ICQoJyNjb250YWluZXItMDEnKQogICAgICAgICAgY29uc3QgY29uZmlnID0geyBiYWNrZ3JvdW5kQ29sb3I6ICd3aGl0ZScgfQogICAgICAgICAgY29uc3Qgdmlld2VyID0gJDNEbW9sLmNyZWF0ZVZpZXdlcihlbGVtZW50LCBjb25maWcpCiAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWYKICAgICAgICAgIHZpZXdlci5hZGRNb2RlbChyZXNwLmRhdGEucmVzdWx0cywgJ3BkYicpIC8qIGxvYWQgZGF0YSAqLwogICAgICAgICAgdmlld2VyLnNldFN0eWxlKHtjaGFpbjogJ0InfSwge2NhcnRvb246IHtjb2xvcjogJ3NwZWN0cnVtJ319KQogICAgICAgICAgdmlld2VyLnNldFN0eWxlKHtjaGFpbjogJ0MnfSwge2NhcnRvb246IHtjb2xvcjogJ3doaXRlJ319KQogICAgICAgICAgdmlld2VyLnNldFN0eWxlKHtjaGFpbjogJ0QnfSwge2NhcnRvb246IHtjb2xvcjogJ3JlZCd9fSkKICAgICAgICAgIHZpZXdlci5hZGRTdXJmYWNlKCQzRG1vbC5TdXJmYWNlVHlwZS5WRFcsIHtvcGFjaXR5OiAwLjc1LCBjb2xvcjogJ3doaXRlJ30sIHtjaGFpbjonRCd9KQogICAgICAgICAgdmlld2VyLnpvb21UbygpIC8qIHNldCBjYW1lcmEgKi8KICAgICAgICAgIHZpZXdlci5yZW5kZXIoKSAvKiByZW5kZXIgc2NlbmUgKi8KICAgICAgICB9IGVsc2UgaWYocmVzcC5kYXRhLmRhdGFfdHlwZSA9PT0gJ2Zsb2F0JykgewogICAgICAgICAgdGhpcy5yZXN1bHRUeXBlID0gMQogICAgICAgICAgdGhpcy5yZXN1bHQgPSAiUHJlZGljdGlvbiBSZXN1bHQ6ICIgKyByZXNwLmRhdGEucmVzdWx0cwogICAgICAgICAgdGhpcy4kbWVzc2FnZSh7CiAgICAgICAgICAgIG1lc3NhZ2U6ICJQcmVkaWN0IFN1Y2Nlc3NmbHkhIFNlZSB0aGUgUmVzdWx0cyBCbG93IiwKICAgICAgICAgICAgdHlwZTogJ3N1Y2Nlc3MnCiAgICAgICAgICB9KQogICAgICAgIH0gZWxzZSBpZihyZXNwLmRhdGEuZGF0YV90eXBlID09PSAnaW50ZXJhY3Rpb24nKSB7CiAgICAgICAgICB0aGlzLnJlc3VsdFR5cGUgPSAyCiAgICAgICAgICB2YXIgcmVzcFJlc3VsdCA9IEpTT04ucGFyc2UocmVzcC5kYXRhLnJlc3VsdHMpCiAgICAgICAgICB0aGlzLnByb3Rfc2VxID0gJzxoNT4nICsgJ0JpbmRpbmcgcmVzaWR1ZXMgaW4gcHJvdGVpbjogJyArICc8L2g1PiA8YnI+ICcKICAgICAgICAgIHZhciB0ZW1wRGljdCA9IHt9CiAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHJlc3BSZXN1bHRbJ3Byb3RfaW5kZXgnXS5sZW5ndGg7IGkrKykgewogICAgICAgICAgICB0ZW1wRGljdFtyZXNwUmVzdWx0Wydwcm90X2luZGV4J11baV1dID0gJzEnCiAgICAgICAgICB9CiAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHJlc3BSZXN1bHRbJ3Byb3Rfc2VxJ10ubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgY29uc29sZS5sb2coInRoaXMudGVtcERpY3QgPSAiLCB0ZW1wRGljdFtpLnRvU3RyaW5nKCldKQogICAgICAgICAgICBpZiAodGVtcERpY3RbaS50b1N0cmluZygpXSA9PSAxKSB7CiAgICAgICAgICAgICAgdGhpcy5wcm90X3NlcSArPSAnPGRpdiBzdHlsZT0iY29sb3I6IHJlZDsgZGlzcGxheTogaW5saW5lLWJsb2NrIj4nICsgcmVzcFJlc3VsdFsncHJvdF9zZXEnXVtpXSArICc8L2Rpdj4nCiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgdGhpcy5wcm90X3NlcSArPSAnPGRpdiBzdHlsZT0iZGlzcGxheTogaW5saW5lLWJsb2NrIj4nICsgcmVzcFJlc3VsdFsncHJvdF9zZXEnXVtpXSArICc8L2Rpdj4nCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICAgIHRoaXMucHJvdF9zZXEgPSAnPHAgY2xhc3M9Im92ZXJ2aWV3X2ZvbnQiPicgKyB0aGlzLnByb3Rfc2VxICsgJzwvcD4nCgoKICAgICAgICAgIHRoaXMucGVwX3NlcSA9ICc8aDU+JyArICdCaW5kaW5nIHJlc2lkdWVzIGluIHBlcHRpZGU6ICcgKyAnPC9oNT4gPGJyPiAnCiAgICAgICAgICB0ZW1wRGljdCA9IHt9CiAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHJlc3BSZXN1bHRbJ3BlcF9pbmRleCddLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgIHRlbXBEaWN0W3Jlc3BSZXN1bHRbJ3BlcF9pbmRleCddW2ldXSA9ICcxJwogICAgICAgICAgfQogICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCByZXNwUmVzdWx0WydwZXBfc2VxJ10ubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgaWYgKHRlbXBEaWN0W2kudG9TdHJpbmcoKV0gPT0gMSkgewogICAgICAgICAgICAgIHRoaXMucGVwX3NlcSArPSAnPGRpdiBzdHlsZT0iY29sb3I6IHJlZDsgZGlzcGxheTogaW5saW5lLWJsb2NrIj4nICsgcmVzcFJlc3VsdFsncGVwX3NlcSddW2ldICsgJzwvZGl2PicKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICB0aGlzLnBlcF9zZXEgKz0gcmVzcFJlc3VsdFsncGVwX3NlcSddW2ldCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICAgIHRoaXMucGVwX3NlcSA9ICc8cD4nICsgdGhpcy5wZXBfc2VxICsgJzwvcD4nCiAgICAgICAgICBjb25zb2xlLmxvZygidGhpcy5yZXN1bHQgPSAiLCB0aGlzLnJlc3VsdCkKICAgICAgICB9CiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmCiAgICAgIH0pLmNhdGNoKGVyciA9PiB7CiAgICAgICAgY29uc29sZS5sb2coZXJyKQogICAgICB9KQogICAgfSwKICAgIGNoYW5nZSh2YWx1ZSkgewogICAgICBjb25zb2xlLmxvZygnY2hhbmdlIHRoaXMudmFsdWUgPSAnICsgdmFsdWUpCiAgICB9LAogICAgaW5wdXQodmFsdWUpIHsKICAgICAgY29uc29sZS5sb2coJ2lucHV0IHRoaXMudmFsdWUgPSAnICsgdmFsdWUpCiAgICB9LAogICAgdGVzdCgpIHsKCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["mode-detail.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"mode-detail.vue","sourceRoot":"src/views/model","sourcesContent":["<template>\n  <div>\n    <el-row style=\"margin-top: 20px\">\n      <el-col :span=\"1\"> <div class=\"grid-content\" /> </el-col>\n      <el-col :span=\"22\">\n        <el-card>\n          <div slot=\"header\" class=\"clearfix\">\n            <h1 class=\"title_font\">{{modelDetail.name}}</h1>\n          </div>\n          <div>\n            <el-descriptions :column=\"2\">\n              <el-descriptions-item label=\"Model Name\">{{ modelDetail.name }}</el-descriptions-item>\n              <el-descriptions-item label=\"Version\">\n                <el-link :href=\"modelDetail.code_address\" type=\"primary\">\n                  {{ modelDetail.version }}\n                </el-link>\n              </el-descriptions-item>\n              <el-descriptions-item label=\"Dataset\">\n                <el-link\n                  :href=\"modelDetail.dataset\"\n                  target=\"_blank\"\n                  type=\"primary\"\n                  icon=\"el-icon-bottom\"\n                >Download</el-link>\n              </el-descriptions-item>\n              <el-descriptions-item label=\"Code\">\n                <el-link type=\"primary\" :href=\"modelDetail.code_address\">\n                  <svg-icon icon-class=\"gitlab\" />\n                  GitLab\n                </el-link>\n              </el-descriptions-item>\n            </el-descriptions>\n          </div>\n          <el-divider/>\n          <h1 class=\"title_font\">Overview</h1>\n          <p class=\"overview_font\">\n            {{ modelDetail.long_description }}\n          </p>\n\n          <div style=\"width: 100%;\" align=\"center\">\n            <img :src=\"modelDetail.arch_img\" style=\"margin: 0 auto; width: 560px; height: 460px\">\n<!--            <img :src=\"../../assets/models_img/\" style=\"margin: 0 auto; width: 560px; height: 460px\">-->\n          </div>\n          <el-divider />\n          <h1 class=\"title_font\">Code for inference</h1>\n          <div class=\"editor-container\">\n            <python-editor ref=\"pythonEditor\" v-model=\"codeExmple\" :code-exmple=\"codeExmple\" />\n          </div>\n          <div style=\"margin-top: 50px; width: 100%; height: 20px\">\n            <el-divider />\n          </div>\n\n          <h1 class=\"title_font\">Try the model now !</h1>\n          <h5 style=\"text-align: center\">Input data on the left and submit to model</h5>\n          <el-row>\n            <el-col :span=\"10\">\n              <div class=\"editor-container\">\n                <json-editor ref=\"jsonEditor\" v-model=\"value\" />\n              </div>\n            </el-col>\n            <el-col :span=\"2\"><div class=\"grid-content\" /></el-col>\n            <el-col :span=\"10\">\n              <div class=\"editor-container\" v-if=\"resultType === 1\">\n                <json-editor ref=\"jsonEditor\" v-model=\"result\" />\n              </div>\n              <div id=\"container-01\" class=\"mol-container\" v-else-if=\"resultType === 0\"/>\n              <div v-else-if=\"resultType === 2\">\n                <el-card>\n                  <div slot=\"header\" class=\"clearfix\">\n                    Prediction Result\n                  </div>\n\n                  <el-row>\n                    <el-col :span=\"24\">\n                      <span v-html=\"prot_seq\"></span>\n                    </el-col>\n                  </el-row>\n\n                  <el-row>\n                    <el-col :span=\"24\">\n                      <span v-html=\"pep_seq\"></span>\n                    </el-col>\n                  </el-row>\n                </el-card>\n\n              </div>\n            </el-col>\n          </el-row>\n          <div style=\"margin-top: 20px;\" align=\"center\">\n            <el-button type=\"primary\" size=\"medium\" @click=\"reasoningModel()\">Predict</el-button>\n          </div>\n        </el-card>\n      </el-col>\n      <el-col :span=\"1\"> <div class=\"grid-content\" /></el-col>\n    </el-row>\n  </div>\n</template>\n<script>\nconst jsonData = '[{\"items\":[{\"market_type\":\"forexdata\",\"symbol\":\"NGAS\"}],\"name\":\"能源化工\"}]'\nimport JsonEditor from '@/components/JsonEditor'\nimport PythonEditor from '@/components/PythonEditor'\nimport { getModelDetail, predict } from '@/api/model_detail'\nimport $ from '@/utils/jquery'\nrequire('@/utils/3Dmol-min')\n\nexport default {\n  name: 'ModeDetail',\n  components: { JsonEditor, PythonEditor },\n  data() {\n    return {\n      modelName: '',\n      value: JSON.parse(jsonData),\n      result: '',\n      codeExmple: '',\n      resultType: 0,\n      prot_seq: '',\n      pep_seq: '',\n      modelDetail: {\n      }\n    }\n  },\n  created() {\n    var modelName = this.$route.query.modelName\n    this.modelName = modelName\n    getModelDetail(modelName).then(resp => {\n      console.log(resp)\n      this.modelDetail = resp.data\n      // this.modelDetail.dataset= 'http://120.53.7.54:5065/' + this.modelDetail.dataset\n      this.modelDetail.dataset = 'http://120.53.7.54:5065/' + 'v6_SMILES_affinity.zip'\n      this.modelDetail.arch_img = require('../../assets/models_img/' + this.modelDetail.arch_img)\n      if (this.modelDetail.inf_code.length <= 0) {\n        this.modelDetail.inf_code = 'import'\n      }\n      this.codeExmple = this.modelDetail.inf_code\n      this.$refs.pythonEditor.refreshPythonEditor(this.codeExmple)\n      this.value = JSON.parse(this.modelDetail.inf_front)\n    }).catch(err => {\n      console.log(err)\n    })\n  },\n  methods: {\n    reasoningModel() {\n      console.log('this.value = ' + this.value)\n      var data = JSON.stringify(this.value)\n      predict(this.modelName, data).then(resp => {\n        if (resp.data.data_type === 'pdb') {\n          this.resultType = 0\n          const element = $('#container-01')\n          const config = { backgroundColor: 'white' }\n          const viewer = $3Dmol.createViewer(element, config)\n          // eslint-disable-next-line no-undef\n          viewer.addModel(resp.data.results, 'pdb') /* load data */\n          viewer.setStyle({chain: 'B'}, {cartoon: {color: 'spectrum'}})\n          viewer.setStyle({chain: 'C'}, {cartoon: {color: 'white'}})\n          viewer.setStyle({chain: 'D'}, {cartoon: {color: 'red'}})\n          viewer.addSurface($3Dmol.SurfaceType.VDW, {opacity: 0.75, color: 'white'}, {chain:'D'})\n          viewer.zoomTo() /* set camera */\n          viewer.render() /* render scene */\n        } else if(resp.data.data_type === 'float') {\n          this.resultType = 1\n          this.result = \"Prediction Result: \" + resp.data.results\n          this.$message({\n            message: \"Predict Successfly! See the Results Blow\",\n            type: 'success'\n          })\n        } else if(resp.data.data_type === 'interaction') {\n          this.resultType = 2\n          var respResult = JSON.parse(resp.data.results)\n          this.prot_seq = '<h5>' + 'Binding residues in protein: ' + '</h5> <br> '\n          var tempDict = {}\n          for (var i = 0; i < respResult['prot_index'].length; i++) {\n            tempDict[respResult['prot_index'][i]] = '1'\n          }\n          for (var i = 0; i < respResult['prot_seq'].length; i++) {\n            console.log(\"this.tempDict = \", tempDict[i.toString()])\n            if (tempDict[i.toString()] == 1) {\n              this.prot_seq += '<div style=\"color: red; display: inline-block\">' + respResult['prot_seq'][i] + '</div>'\n            } else {\n              this.prot_seq += '<div style=\"display: inline-block\">' + respResult['prot_seq'][i] + '</div>'\n            }\n          }\n          this.prot_seq = '<p class=\"overview_font\">' + this.prot_seq + '</p>'\n\n\n          this.pep_seq = '<h5>' + 'Binding residues in peptide: ' + '</h5> <br> '\n          tempDict = {}\n          for (var i = 0; i < respResult['pep_index'].length; i++) {\n            tempDict[respResult['pep_index'][i]] = '1'\n          }\n          for (var i = 0; i < respResult['pep_seq'].length; i++) {\n            if (tempDict[i.toString()] == 1) {\n              this.pep_seq += '<div style=\"color: red; display: inline-block\">' + respResult['pep_seq'][i] + '</div>'\n            } else {\n              this.pep_seq += respResult['pep_seq'][i]\n            }\n          }\n          this.pep_seq = '<p>' + this.pep_seq + '</p>'\n          console.log(\"this.result = \", this.result)\n        }\n        // eslint-disable-next-line no-undef\n      }).catch(err => {\n        console.log(err)\n      })\n    },\n    change(value) {\n      console.log('change this.value = ' + value)\n    },\n    input(value) {\n      console.log('input this.value = ' + value)\n    },\n    test() {\n\n    }\n  }\n}\n</script>\n\n<style scoped>\n.grid-content {\n  border-radius: 4px;\n  min-height: 36px;\n}\n\n.overview_font {\n  font-size: 20px;\n  font-family: \"Microsoft YaHei\",\"Times New Roman\", Times, serif;\n  text-align: justify;\n  font-weight: normal;\n  line-height: 1.5;\n}\n\n.grid-content {\n  border-radius: 4px;\n  min-height: 36px;\n}\n\n.mol-container {\n  width: 100%;\n  height: 300px;\n  position: relative;\n  border-left: 1px solid #DCDFE6;\n}\n\n.title_font {\n  text-align: center;\n}\n</style>\n"]}]}