{"remainingRequest":"/Users/a1/Desktop/code/golang/src/vue-element-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/a1/Desktop/code/golang/src/vue-element-admin/src/views/model/index.vue?vue&type=style&index=0&id=29d27042&scoped=true&lang=css&","dependencies":[{"path":"/Users/a1/Desktop/code/golang/src/vue-element-admin/src/views/model/index.vue","mtime":1677433748508},{"path":"/Users/a1/Desktop/code/golang/src/vue-element-admin/node_modules/css-loader/dist/cjs.js","mtime":1677293887603},{"path":"/Users/a1/Desktop/code/golang/src/vue-element-admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1677293892954},{"path":"/Users/a1/Desktop/code/golang/src/vue-element-admin/node_modules/postcss-loader/src/index.js","mtime":1677293887964},{"path":"/Users/a1/Desktop/code/golang/src/vue-element-admin/node_modules/cache-loader/dist/cjs.js","mtime":1677293886981},{"path":"/Users/a1/Desktop/code/golang/src/vue-element-admin/node_modules/vue-loader/lib/index.js","mtime":1677293892832}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmltYWdlIHsKICB3aWR0aDogMTAwJTsKICBoZWlnaHQ6IDIzMHB4OwogIGRpc3BsYXk6IGJsb2NrOwp9CgouaW1hZ2VfZGl2IHsKICBoZWlnaHQ6IDIwMHB4OwogIHdpZHRoOiAxMDAlOwp9CgouZ3JpZC1jb250ZW50IHsKICBib3JkZXItcmFkaXVzOiA0cHg7CiAgbWluLWhlaWdodDogMzZweDsKfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/model","sourcesContent":["<template>\n  <div>\n    <div v-for=\"(modelObj, modelObjKey) in modelDatas\">\n      <el-row style=\"margin-top: 10px\">\n        <el-col :span=\"24\">\n          <h2 style=\"text-align: center\">{{ modelDatasMap[modelObjKey].name }}</h2>\n          <h4 style=\"text-align: center\"> {{ modelDatasMap[modelObjKey].describe }} </h4>\n        </el-col>\n      </el-row>\n      <el-row style=\"margin-top: 10px\">\n        <el-col :span=\"1\"> <div class=\"grid-content\" /></el-col>\n        <el-col :span=\"22\">\n          <el-row style=\"margin-top: 0px\">\n            <div v-for=\"(modelData, index) in modelObj\" :index=\"index\">\n              <el-col :span=\"1\" style=\"margin-top: 10px\"> <div class=\"grid-content\" /></el-col>\n              <el-col :span=\"7\" style=\"margin-top: 10px\">\n                <el-card class=\"box-card\" shadow=\"hover\">\n                  <div class=\"image_div\">\n                    <a :href=\"modelData.code_address\">\n                      <img :src=\"modelData.arch_img\" class=\"image\">\n<!--                      <img src=\"require('../../assets/models_img/SC-CPPTransformer.png')\" class=\"image\">-->\n<!--                      <img src=\"../../assets/models_img/\">-->\n                    </a>\n                  </div>\n                  <el-divider/>\n                  <el-link type=\"primary\" :href=\"modelData.github\">{{modelData.name}}</el-link>\n                  <div style=\"height: 100px; width: 100%; overflow: hidden;\">\n                    <h4>{{modelData.short_description}}</h4>\n                  </div>\n                  <el-row>\n                    <el-button size=\"small\" type=\"text\" icon=\"el-icon-top-right\" @click=\"jumpModelDetail(modelData.name)\">Jump to</el-button>\n                  </el-row>\n                </el-card>\n              </el-col>\n            </div>\n          </el-row>\n        </el-col>\n        <el-col :span=\"1\"> <div class=\"grid-content\" /></el-col>\n      </el-row>\n      <div style=\"width: 30%; margin: 0 auto\">\n        <el-divider></el-divider>\n      </div>\n    </div>\n\n\n\n\n  </div>\n</template>\n\n<script>\nimport stPepCarC from '../../assets/custom_images/ST-PepCarC.png'\nimport synEvo from '../../assets/custom_images/SynEvo.png'\nimport { getModel } from '@/api/model'\nexport default {\n  name: 'Model',\n  data() {\n    return {\n      stPepCarC,\n      synEvo,\n      modelDatas: {\n        'ptm': [],\n        'vsca': [],\n        'dnd': [],\n        'cppa': [],\n        'ot': []\n      },\n      modelDatasMap: {\n        'vsca': {\n          'name': 'Virtual Screenning Core Algorithm',\n          'describe': ''\n        },\n        'dnd': {\n          'name': 'De novo Design',\n          'describe': ''\n        },\n        'ot': {\n          'name': 'Other Toolkits',\n          'describe': ''\n        },\n        'cppa': {\n          'name': 'Ceil Penerating Peptide Algorithm',\n          'describe': ''\n        },\n        'ptm': {\n          'name': 'Pre-trained Models',\n          'describe': ''\n        }\n      }\n\n    }\n  },\n  created() {\n    getModel().then(response => {\n      console.log(response.data)\n      // 对数据进行分类\n      // 1.Virtual Screenning Core Algorithm\n      // 2.De novo Design\n      // 3.Other Toolkits\n      // 4.Ceil Penerating Peptide Algorithm\n      for (let i = 0; i < response.data.length; i++) {\n        response.data[i].arch_img = require('../../assets/models_img/' + response.data[i].arch_img)\n        if (response.data[i].category === 'Virtual Screenning Core Algorithm') {\n          this.modelDatas['vsca'].push(response.data[i])\n          this.modelDatasMap['vsca'].describe = response.data[i].cat_description\n        } else if (response.data[i].category === 'De novo Design') {\n          this.modelDatas['dnd'].push(response.data[i])\n          this.modelDatasMap['dnd'].describe = response.data[i].cat_description\n        } else if (response.data[i].category === 'Other Toolkits') {\n          this.modelDatas['ot'].push(response.data[i])\n          this.modelDatasMap['ot'].describe = response.data[i].cat_description\n        } else if (response.data[i].category === 'Ceil Penerating Peptide Algorithm') {\n          this.modelDatas['cppa'].push(response.data[i])\n          this.modelDatasMap['cppa'].describe = response.data[i].cat_description\n        } else if (response.data[i].category === 'Pre-trained Models') {\n          this.modelDatas['ptm'].push(response.data[i])\n          this.modelDatasMap['ptm'].describe = response.data[i].cat_description\n        }\n      }\n      console.log('data = ', this.modelDatas)\n    }).catch(err => {\n      console.log(err)\n    })\n  },\n  methods: {\n    jumpModelDetail(modelName) {\n      this.$router.push('/model/detail?modelName=' + modelName)\n    }\n\n  }\n}\n</script>\n\n<style scoped>\n\n.image {\n  width: 100%;\n  height: 230px;\n  display: block;\n}\n\n.image_div {\n  height: 200px;\n  width: 100%;\n}\n\n.grid-content {\n  border-radius: 4px;\n  min-height: 36px;\n}\n</style>\n"]}]}