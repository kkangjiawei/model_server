{"remainingRequest":"/Users/admin/Downloads/vue-element-admin/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/admin/Downloads/vue-element-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/admin/Downloads/vue-element-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/admin/Downloads/vue-element-admin/src/views/ml-platform/index.vue?vue&type=template&id=1afa097a&scoped=true&","dependencies":[{"path":"/Users/admin/Downloads/vue-element-admin/src/views/ml-platform/index.vue","mtime":1677738077583},{"path":"/Users/admin/Downloads/vue-element-admin/node_modules/cache-loader/dist/cjs.js","mtime":1677293886000},{"path":"/Users/admin/Downloads/vue-element-admin/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1677293892000},{"path":"/Users/admin/Downloads/vue-element-admin/node_modules/cache-loader/dist/cjs.js","mtime":1677293886000},{"path":"/Users/admin/Downloads/vue-element-admin/node_modules/vue-loader/lib/index.js","mtime":1677293892000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}